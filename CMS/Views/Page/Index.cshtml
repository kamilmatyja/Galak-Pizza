@using CMS.Enums
@using CMS.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<CMS.Models.PageModel>

@{
    ViewData["Title"] = "Lista";

    var userModel = ViewData["CurrentUserModel"] as UserModel;
}

<h1>Lista</h1>

@if (userModel?.Role == UserRolesEnum.Administrator || userModel?.Role == UserRolesEnum.Author)
{
    <p><a asp-action="Create">Stwórz nowy rekord</a></p>
}
<hr/>
<div class="row justify-content-center">
    <div class="col-md-8 mx-auto">
        <form method="get" asp-action="Index">
            <div class="form-group">
                <label for="FilterUserId">@Html.DisplayNameFor(model => model.UserId)</label>
                <select name="userId" id="FilterUserId" class="form-control" asp-items="ViewBag.FilterUser">
                    <option value="">Wszyscy</option>
                </select>
            </div>
            <div class="form-group">
                <label for="FilterParentPageId">@Html.DisplayNameFor(model => model.ParentPageId)</label>
                <select name="parentPageId" id="FilterParentPageId" class="form-control" asp-items="ViewBag.FilterParentPageId">
                    <option value="">Wszystkie</option>
                </select>
            </div>
            <div class="form-group">
                <label for="FilterCategory" class="control-label">@Html.DisplayNameFor(model => model.CategoryId)</label>
                <select name="categoryId" id="FilterCategory" class="form-control" asp-items="ViewBag.FilterCategory">
                    <option value="">Wszystkie</option>
                </select>
            </div>
            <div class="form-group">
                <label for="FilterTitle">@Html.DisplayNameFor(model => model.Title)</label>
                <input type="text" name="title" id="FilterTitle" value="@ViewBag.FilterTitle" class="form-control"/>
            </div>
            <input type="submit" value="Filtruj" class="btn btn-primary"/>
        </form>
    </div>
</div>
<hr/>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentPageId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Link)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Keywords)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            Powiązane wyświetlenia
        </th>
        <th>
            Powiązane komentarze
        </th>
        <th>
            Powiązane oceny
        </th>
        <th>
            Średnia ocen
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.IdentityUser.UserName)
            </td>
            <td>
                @(item.ParentPage?.Title.Length > 50 ? item.ParentPage.Title.Substring(0, 50) + "..." : item.ParentPage?.Title)
            </td>
            <td>
                @(item.Category.Name.Length > 50 ? item.Category.Name.Substring(0, 50) + "..." : item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Link)
            </td>
            <td>
                @(item.Title.Length > 50 ? item.Title.Substring(0, 50) + "..." : item.Title)
            </td>
            <td>
                @(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)
            </td>
            <td>
                @(item.Keywords.Length > 50 ? item.Keywords.Substring(0, 50) + "..." : item.Keywords)
            </td>
            <td>
                @if (!string.IsNullOrEmpty(item.Image))
                {
                    <img src="data:image;base64,@item.Image" class="image-form" alt="Image"/>
                }
                else
                {
                    <span>No Image</span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Entries.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ratings.Count)
            </td>
            <td>
                @{
                    var averageRating = item.Ratings.Any()
                        ? item.Ratings.Average(r => (int)r.Rating)
                        : 0;
                }
                @averageRating.ToString("0.00")
            </td>
            <td>
                @if (userModel?.Role == UserRolesEnum.Administrator || userModel?.Role == UserRolesEnum.Author)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edytuj</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Usuń</a>
                }
                @if (userModel?.Role == UserRolesEnum.Administrator || userModel?.Role == UserRolesEnum.Author || userModel?.Role == UserRolesEnum.Analyst)
                {
                    <a asp-action="Details" asp-route-id="@item.Id">Szczegóły</a>
                }

                <a asp-action="Home" asp-route-link="@item.Link">Podgląd</a>
            </td>
        </tr>
    }
    </tbody>
</table>
